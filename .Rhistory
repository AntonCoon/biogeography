tbl=read.table("./our_data/mybed_450.20.Q")
barplot(t(as.matrix(tbl)), col=rainbow(12),
xlab="Individual #", ylab="Ancestry", border=NA)
tbl
str(tbl)
View(tbl)
as.matrix(tbl)
t(as.matrix(tbl))
View(as.matrix(tbl))
View(t(as.matrix(tbl)))
barplot(t(as.matrix(tbl))[[1]], col=rainbow(12),
xlab="Individual #", ylab="Ancestry", border=NA)
t(as.matrix(tbl))[1,]
barplot(t(as.matrix(tbl))[1,], col=rainbow(12),
xlab="Individual #", ylab="Ancestry", border=NA)
barplot(t(as.matrix(tbl))[,1], col=rainbow(12),
xlab="Individual #", ylab="Ancestry", border=NA)
t(as.matrix(tbl))[,1]
t(as.matrix(tbl))[1,]
barplot(t(as.matrix(tbl))[,1],
xlab="Individual #", ylab="Ancestry", border=NA)
barplot(t(as.matrix(tbl))[1,],
xlab="Individual #", ylab="Ancestry", border=NA)
barplot(t(as.matrix(tbl))[2,],
xlab="Individual #", ylab="Ancestry", border=NA)
View(read.csv("./our_data/result_k_20_climate_soil.csv"))
library(raster)
nutrient.availability <-
as.matrix(raster("./quolity/nutrient_availability.asc"))
nutrient.retention.capacity <-
as.matrix(raster("./quolity/nutrient_retention_capacity.asc"))
rooting.conditions <-
as.matrix(raster("./quolity/rooting_conditions.asc"))
oxygen.availability <-
as.matrix(raster("./quolity/oxygen_availability.asc"))
excess.salts <- as.matrix(raster("./quolity/excess_salts.asc"))
toxicity <- as.matrix(raster("./quolity/toxicity.asc"))
workability <- as.matrix(raster("./quolity/workability.asc"))
get_soil_quality_by_coords <- function(lat, lon, matrix.data) {
scale = dim(matrix.data) / c(180, 360)
scaled.lat <- round((-lat + 90) * scale[1])
scaled.lon <- round((-lon + 180) * scale[2])
matrix.data[scaled.lat, scaled.lon]
}
bio_geo_data <- read.csv("./our_data/result_k_20_climate.csv")
bio_geo_data$nutrient.availability <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
nutrient.availability
)
)
bio_geo_data$nutrient.retention.capacity <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
nutrient.retention.capacity
)
)
bio_geo_data$rooting.conditions <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
rooting.conditions
)
)
bio_geo_data$oxygen.availability <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
oxygen.availability
)
)
bio_geo_data$excess.salts <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
excess.salts
)
)
bio_geo_data$toxicity <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
toxicity
)
)
bio_geo_data$workability <- with(
bio_geo_data,
get_soil_quality_by_coords(
latitude,
longitude,
workability
)
)
write.csv(bio_geo_data,  file = "result_k_20_climate_soil.csv")
nutrient.availability <-
as.matrix(raster("./quolity/nutrient_availability.asc"))
nutrient.retention.capacity <-
as.matrix(raster("./quolity/nutrient_retention_capacity.asc"))
rooting.conditions <-
as.matrix(raster("./quolity/rooting_conditions.asc"))
oxygen.availability <-
as.matrix(raster("./quolity/oxygen_availability.asc"))
excess.salts <- as.matrix(raster("./quolity/excess_salts.asc"))
toxicity <- as.matrix(raster("./quolity/toxicity.asc"))
workability <- as.matrix(raster("./quolity/workability.asc"))
nutrient.availability <-
as.matrix(raster("./quolity/nutrient_availability.asc"))
library(raster)
nutrient.availability <-
as.matrix(raster("./quolity/nutrient_availability.asc"))
library("raster", lib.loc="~/R/win-library/3.4")
nutrient.availability <-
as.matrix(raster("./quolity/nutrient_availability.asc"))
workability <- as.matrix(raster("./quolity/workability.asc"))
View(read.csv("./our_data/result_k_20_climate_soil.csv"))
nutrient.availability <-
as.matrix(raster("./quality/nutrient_availability.asc"))
nutrient.retention.capacity <-
as.matrix(raster("./quality/nutrient_retention_capacity.asc"))
rooting.conditions <-
as.matrix(raster("./quality/rooting_conditions.asc"))
oxygen.availability <-
as.matrix(raster("./quality/oxygen_availability.asc"))
excess.salts <- as.matrix(raster("./quality/excess_salts.asc"))
toxicity <- as.matrix(raster("./quality/toxicity.asc"))
workability <- as.matrix(raster("./quality/workability.asc"))
nutrient.availability <-
as.matrix(raster("./quality/nutrient_availability.asc"))
nutrient.availability <-
as.matrix(raster("./quality/nutrient_availability.asc"))
nutrient.retention.capacity <-
as.matrix(raster("./quality/nutrient_retention_capacity.asc"))
rooting.conditions <-
as.matrix(raster("./quality/rooting_conditions.asc"))
oxygen.availability <-
as.matrix(raster("./quality/oxygen_availability.asc"))
excess.salts <- as.matrix(raster("./quality/excess_salts.asc"))
toxicity <- as.matrix(raster("./quality/toxicity.asc"))
workability <- as.matrix(raster("./quality/workability.asc"))
View(read.csv("./our_data/result_k_20_climate_soil.csv"))
library(raster)
library(raster)
bio_geo_data <- read.csv("./our_data/result_k_20_climate.csv")
bio_geo_data
coords <- data.frame(x = bio_geo_data["longitude"],y = bio_geo_data["latitude"])
coords <- data.frame(x = bio_geo_data["longitude"],y = bio_geo_data["latitude"])
points <- SpatialPoints(coords, proj4string = raster()@crs)
points
list <- list.files(path='quality/', full.names=TRUE)
list
turaStack <- stack(list)
raster()@crs
remove.packages(raster, raster)
remove.packages(raster)
remove.packages(c(raster))
remove.packages()
remove.packages("raster")
remove.packages("raster", "raster")
1+ 1
library(raster)
install.packages("raster")
library(raster)
bio_geo_data <- read.csv("./our_data/result_k_20_climate.csv")
coords <- data.frame(x = bio_geo_data["longitude"],y = bio_geo_data["latitude"])
points <- SpatialPoints(coords, proj4string = raster()@crs)
list <- list.files(path='quality/', full.names=TRUE)
turaStack <- stack(list)
bio_geo_data <- read.csv("./our_data/result_k_20_climate.csv")
bio_geo_data
bio_geo_data <- read.csv("./our_data/result_k_20_climate_soil.csv")
bio_geo_data
names(bio_geo_data())
bio_geo_data <- read.csv("./our_data/result_k_20_climate_soil.csv")
names(bio_geo_data)
bio_geo_data <- read.csv("./our_data/result_k_20_climate_soil.csv")
bio_geo_data
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
bio_geo_data <- read.csv("../our_data/result_k_20_climate_soil.csv")
summary(bio_geo_data)
read.table(file.path("C:\Users\tonie\Desktop\study\AU\sem_2\small_projects\3_ecoli\TY2482_libraries\jellyfish_result_31_6000000spec1_31mer.histo"))
read.table("C:/Users/tonie/Desktop/study/AU/sem_2/small_projects/3_ecoli/TY2482_libraries/jellyfish_result_31_6000000spec1_31mer.histo"))
read.table("C:/Users/tonie/Desktop/study/AU/sem_2/small_projects/3_ecoli/TY2482_libraries/jellyfish_result_31_6000000spec1_31mer.histo")
read.table("C:/Users/tonie/Desktop/study/AU/sem_2/small_projects/3_ecoli/TY2482_libraries/jellyfish_result_31_6000000/spec1_31mer.histo")
histo.data <- as.data.frame(read.table("C:/Users/tonie/Desktop/study/AU/sem_2/small_projects/3_ecoli/TY2482_libraries/jellyfish_result_31_6000000/spec1_31mer.histo"))
library(ggplot2)
str(histo.data)
ggplot(histo.data, aes(V1, V2)) +
geom_bar()
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_bar()
histo.data
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_point()
histo.data[1]
histo.data[,1]
histo.data[, 1]
histo.data[1, 1]
histo.data[1, c(1, 2)]
ggplot(histo.data[2:length(histo.data), c(1, 2)], aes(x = V1, y = V2)) +
geom_point()
ggplot(histo.data[2:length(histo.data[1]), c(1, 2)], aes(x = V1, y = V2)) +
geom_point()
length(histo.data[1])
ggplot(histo.data[2:length(histo.data[,1]), c(1, 2)], aes(x = V1, y = V2)) +
geom_point()
ggplot(histo.data), aes(x = V1, y = V2)) +
geom_bar(stat = "identity")
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_bar(stat = "identity")
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[2:length(histo.data[,1]), c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[2:length(histo.data[,1]), c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[3:length(histo.data[,1]), c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:length(histo.data[,1]), c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:170), c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:170), c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:170, c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:130, c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
histo.data[,2]
histo.data[histo.data[,2] == max(histo.data[,2])]
sum(histo.data[])
histo.data[[histo.data[,2] == max(histo.data[,2])]]
histo.data[,2] == max(histo.data[,2])
histo.data[4:120, c(1, 2)][histo.data[4:120, 2] == max(histo.data[4:120, 2])]
histo.data[4:120, c(1, 2)]
c(histo.data[4:120, 1])[histo.data[4:120, 2] == max(histo.data[4:120, 2])]
names(histo.data)
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_line(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_line(stat="identity", color="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_line(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue")+
theme_minimal()
histo.data[32]
histo.data[,32]
histo.data[32,]
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue")+
theme_minimal()+
geom_point()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue")+
theme_minimal()+
geom_line()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue") +
theme_minimal() +
geom_line() +
xlab("frequency") +
ylab("k mer count")
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue", alpha = 0.7) +
theme_minimal() +
geom_line() +
xlab("frequency") +
ylab("k mer count")
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue", alpha = 0.3) +
theme_minimal() +
geom_line() +
xlab("frequency") +
ylab("k mer count")
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue", alpha = 0.8) +
theme_minimal() +
geom_line() +
xlab("frequency") +
ylab("k mer count")
sum(histo.data[,2])
sum(histo.data[,2])/32*90/(90-30)
sum(histo.data[,2]*histo.data[,1])
sum(histo.data[с(5, 120),2]*histo.data[с(5, 120),1])
sum(histo.data[5:120,2]*histo.data[5:120,1])
sum(histo.data[5:120,2]*histo.data[5:120,1])/32*90/(90-30)
sum(histo.data[5:120,2]*histo.data[5:120,1])/32
32*90/(90-30)
sum(histo.data[5:120,2]*histo.data[5:120,1])/(32*90/(90-30))
6552212/2
6552212/2 - 3466570
sum(histo.data[5:120,2]*histo.data[5:120,1])
sum(histo.data[5:120,2]*histo.data[5:120,1])/(32*90/(90-30))
bio_geo_data <- read.csv("../our_data/result_k_20_climate_soil.csv")
summary(bio_geo_data)
bio_geo_data <- read.csv("../our_data/result_k_20_climate_soil.csv")
str(bio_geo_data)
?matrix
matrix(1:9, ncol = 3)
a <- c(1, 2, 3)
b <- c(1, 2, 3, 4)
A <- matrix(1:9, ncol = 3)
A*a
A%*%a
A <- matrix(1:12, ncol = 3)
A
A%*%b
A <- matrix(1:12, ncol = 4)
A%*%b
A
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
histo.data <- as.data.frame(read.table("C:/Users/tonie/Desktop/study/AU/sem_2/small_projects/3_ecoli/TY2482_libraries/jellyfish_result_31_6000000/spec1_31mer.histo"))
library(ggplot2)
names(histo.data) = c("")
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
histo.data <- as.data.frame(read.table("C:/Users/tonie/Desktop/study/AU/sem_2/small_projects/3_ecoli/TY2482_libraries/jellyfish_result_31_6000000/spec1_31mer.histo"))
histo.data
library(ggplot2)
ggplot(histo.data, aes(x = V1, y = V2)) +
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(histo.data[4:120, c(1, 2)], aes(x = V1, y = V2)) +
geom_density(stat="identity", fill="steelblue", color="steelblue", alpha = 0.8) +
theme_minimal() +
geom_line() +
xlab("frequency") +
ylab("k mer count")
c(histo.data[4:120, 1])[histo.data[4:120, 2] == max(histo.data[4:120, 2])]
sum(histo.data[5:120,2]*histo.data[5:120,1])/(32*90/(90-30))
